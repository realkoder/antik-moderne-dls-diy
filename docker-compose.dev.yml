networks:
  microservices:
    driver: bridge

services:

  postgresdb:
    container_name: postgresdb
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/users/src/db/migrations:/docker-entrypoint-initdb.d/migrations_users  # Users migrations
      - ./backend/products/src/db/migrations:/docker-entrypoint-initdb.d/migrations_products  # Products migrations
      - ./backend/baskets/src/db/migrations:/docker-entrypoint-initdb.d/migrations_baskets  # Baskets migrations
      - ./init-migrations.sh:/docker-entrypoint-initdb.d/init-migrations.sh  # Mount the init script
    networks:
      - microservices

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - microservices

  frontend-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file:
      - ./frontend/.env.local
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 3000:5173
      - 8002:8002
    networks:
        - microservices

  auth-service:
    restart: always
    container_name: auth-service
    build:
      context: ./backend/auth
      target: develop
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/auth/.env.local
    volumes:
      - ./backend/auth:/app
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
      - 3001:3001
    networks:
        - microservices

  baskets-service:
    restart: always
    container_name: baskets-service
    build:
      context: ./backend/baskets
      target: develop
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/baskets/.env.local
    environment:
      - ENV=docker-compose
    volumes:
      - ./backend/baskets:/app
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
      - 3002:3002
    networks:
        - microservices

  emails-service:
    restart: always
    container_name: emails-service
    build:
      context: ./backend/emails
      target: develop
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/emails/.env.local
    volumes:
      - ./backend/emails:/app
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
    - 3003:3003
    networks:
        - microservices

  products-service:
    restart: always
    container_name: products-service
    build:
      context: ./backend/products
      target: develop
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/products/.env.local
    environment:
      - ENV=docker-compose
    volumes:
      - ./backend/products:/app
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
      - 3004:3004
    networks:
        - microservices

  users-service:
    restart: always
    container_name: users-service
    build:
      context: ./backend/users
      target: develop
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/users/.env.local
    environment:
      - ENV=docker-compose
    volumes:
      - ./backend/users:/app
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
    - 3005:3005
    networks:
        - microservices

volumes:
  postgres_data: {}
  
  